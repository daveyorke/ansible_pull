- name: Setup monitor for VRR and scaling
  dconf:
    key: "/org/gnome/mutter/experimental-features"
    value: "['variable-refresh-rate','scale-monitor-framebuffer']"
  when: (ansible_facts['hostname'] == "neon")

- name: Swap CAPS and ESC
  dconf:
    key: "/org/gnome/desktop/input-sources/xkb-options"
    value: "['caps:swapescape']"
  when: ansible_facts['hostname'] == "neon"

- name: Enable minimize and maximize buttons on windows
  dconf:
    key: "/org/gnome/desktop/wm/preferences/button-layout"
    value: "':minimize,maximize,close'"
  when: ansible_facts['hostname'] == "neon"

- name: gnome | shell settings | event-sounds (disable)
  tags: gnome,audio,sounds,alerts
  become_user: dave
  dconf:
    key: "/org/gnome/desktop/sound/event-sounds"
    value: "false"

- name: Setup gnome favorite apps (dock) - Fedora 40
  dconf:
    key: "/org/gnome/shell/favorite-apps"
    value: "['org.gnome.Terminal.desktop', 'google-chrome.desktop', 'org.gnome.Nautilus.desktop', 'virt-manager.desktop']"
  when: (ansible_facts['hostname'] == "neon" and ansible_facts["distribution"] == "Fedora" and ansible_facts["distribution_version"] == "40")

- name: Setup gnome favorite apps (dock) - Fedora 41
  dconf:
    key: "/org/gnome/shell/favorite-apps"
    value: "['org.gnome.Ptyxis.desktop', 'google-chrome.desktop', 'org.gnome.Nautilus.desktop', 'virt-manager.desktop']"
  when: (ansible_facts['hostname'] == "neon" and ansible_facts["distribution"] == "Fedora" and ansible_facts["distribution_version"] == "41")

- name: Install gnome-related packages
  ansible.builtin.dnf:
    name: "{{ item.name }}"
    state: present
  with_items:
    - { name: "dconf-editor" }
    - { name: "gnome-tweaks" }
  when: ansible_facts['hostname'] == "neon"
  become: true

- name: Install gnome-related flatpaks
  community.general.flatpak:
    name: "{{ item.name }}"
    state: present
  with_items:
    - { name: "org.gnome.Extensions" }
    - { name: "com.mattjakeman.ExtensionManager" }

- name: ensure fonts directory
  file:
    path: "{{ lookup('env', 'HOME') }}/.fonts"
    state: directory
  tags:
    - fonts

- name: Hack exists
  shell: "ls {{ lookup('env', 'HOME') }}/.fonts/Hack*Nerd*Font*Complete*"
  register: hack_exists
  ignore_errors: yes
  tags:
    - fonts

- name: Download Hack
  when: hack_exists is failed
  ansible.builtin.unarchive:
    src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.3.0/Hack.zip
    dest: "{{ lookup('env', 'HOME') }}/.fonts/"
    remote_src: yes
  tags:
    - fonts

- name: Setup hack fonts for terminal
  dconf:
    key: "/org/gnome/desktop/interface/monospace-font-name"
    value: "'Hack Nerd Font Mono 12'"
  when: (ansible_facts['hostname'] == "neon")
  tags:
    - fonts

